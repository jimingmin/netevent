############################################################
#some variables
############################################################
CC	= gcc
CXX	= g++
CPP	= g++
AR	= ar

###########################################################
#some flags
###########################################################
ARFLAGS = cr

tmp=$(shell svn up)
svnver=`svn info | grep Revision| cut -d " " -f 2`
svndir=`svn info | grep URL| cut -d " " -f 2`

ifeq ($(mode),d)
	CPPFLAGS= -g -fPIC -Wall -DDEBUG $(INC) -Wno-invalid-offsetof
	LDFLAGS = -g -fPIC -L$(LIB_DIR) -lnetevent
else
	CPPFLAGS= -g -fPIC -Wall  $(INC) -Wno-invalid-offsetof
	LDFLAGS = -g -fPIC -L$(LIB_DIR) -lnetevent
endif



###########################################################
#some path definition
###########################################################
BASE_DIR= ${HOME}

MYSQL_INCLUDE_DIR = /usr/include
LUA_INCLUDE_DIR = $(BASE_DIR)/lua/include
FASTFRAME_INCLUDE_DIR = $(BASE_DIR)/fastframe
PUBLIC_INCLUDE_DIR = $(BASE_DIR)/public
NETEVENT_INCLUDE_DIR = $(BASE_DIR)/netevent

DEBUG_LIB_DIR = $(BASE_DIR)/lib/Debug
RELEASE_LIB_DIR = $(BASE_DIR)/lib/Release

ifeq ($(mode),d)
	LIB_DIR = $(DEBUG_LIB_DIR)
	BIN_DIR = $(BASE_DIR)/bin/Debug
	BIN_SUFFIX = _dbg
else
	LIB_DIR = $(RELEASE_LIB_DIR)
	BIN_DIR = $(BASE_DIR)/bin/Release
endif
	

OBJ_DIR	= ./.objs
MYSQL_LIB_DIR = /usr/lib64/mysql
TINYXML_LIB_DIR = $(BASE_DIR)/fastframe/tinyxml
LUA_LIB_DIR = $(BASE_DIR)/lua/src

COMMON_DIR = $(BASE_DIR)/fastframe/common
FASTFRAME_DIR = $(BASE_DIR)/fastframe
NETEVENT_DIR = $(BASE_DIR)/netevent
AUTH_DIR = $(BASE_DIR)/fastframe/auth
UTILS_DIR= $(BASE_DIR)/fastframe/utils
LZMA_DIR= $(BASE_DIR)/fastframe/lzma
LUA_DIR = $(BASE_DIR)/lua/src

COMMON_LIB = $(LIB_DIR)/libcommon.a
AUTH_LIB = $(LIB_DIR)/libauth.a
UTILS_LIB=$(LIB_DIR)/libutils.a
LZMA_LIB=$(LIB_DIR)/liblzma.a
FASTFRAME_LIB=$(LIB_DIR)/libfastframe.a
NETEVENT_LIB=$(LIB_DIR)/libnetevent.a


SRC = $(wildcard *.cpp) $(wildcard *.c) $(wildcard *.cxx)


